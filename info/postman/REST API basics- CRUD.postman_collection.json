{
	"info": {
		"_postman_id": "e894ba96-b620-4ae6-9570-ce7a073cbf45",
		"name": "REST API basics: CRUD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33149280"
	},
	"item": [
		{
			"name": "Cars",
			"item": [
				{
					"name": "get All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{car}}",
							"host": [
								"{{car}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get one",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{car}}/1",
							"host": [
								"{{car}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"brand\": \"Volga\",\n    \"model\": \"3102\",\n    \"color\": \"black\",\n    \"regNum\": \"C707CC797\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{car}}",
							"host": [
								"{{car}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"brand\": \"Volga\",\n    \"model\": \"3102\",\n    \"color\": \"black\",\n    \"regNum\": \"P090PO198\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{car}}",
							"host": [
								"{{car}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{car}}/1",
							"host": [
								"{{car}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Person",
			"item": [
				{
					"name": "get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{user}}",
							"host": [
								"{{user}}"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get user",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{user}}/lopsrc@example.com",
							"host": [
								"{{user}}"
							],
							"path": [
								"lopsrc@example.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Lopsrc\",\n    \"email\": \"serpan@example.com\",\n    \"age\": 30\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{user}}",
							"host": [
								"{{user}}"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Lopsrc\",\n    \"lastName\": \"Pan\",\n    \"email\": \"serpan@example.com\",\n    \"age\": 22\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{user}}",
							"host": [
								"{{user}}"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{user}}/serpan@example.com",
							"host": [
								"{{user}}"
							],
							"path": [
								"serpan@example.com"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "recover user",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{user}}/serpan@example.com",
							"host": [
								"{{user}}"
							],
							"path": [
								"serpan@example.com"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "user",
			"value": "localhost:3000/api/v1/user"
		},
		{
			"key": "car",
			"value": "localhost:3000/api/v1/car",
			"type": "string"
		}
	]
}